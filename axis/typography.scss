// Alias: Uppercase
// An alias for 'text-transform: uppercase'
// ex. @include uppercase();

@mixin uppercase() {
  text-transform: uppercase;
}


// Alias: Upcase
@mixin upcase() {
  @include uppercase();
}

// Alias: Lowercase
// An alias for 'text-transform: lowercase'
// ex. @include lowercase();
@mixin lowercase() {
  text-transform: lowercase;
}

// Alias: Downcase
@mixin downcase {
  @include lowercase();
}

// Alias: Reset Case
// Gets rid of an text transform
// ex. @include reset-case();
@mixin reset-case() {
  text-transform: none;
}

// Alias: Bold
// It's just faster to type bold() than font-weight: bold

@mixin bold() {
  font-weight: bold;
}


// Alias: Italic
// It's just faster to type italic() than font-style: italic

@mixin italic() {
  font-style: italic;
}


// Alias: Normal
// Put the font-weight and style back to normal

@mixin normal() {
  font-weight: normal;
  font-style: normal;
}


// Mixin: Small
//
// Makes your text smaller and a little lighter. Great on <small /> tags.
//
// ex. @include small();
@mixin small() {
  font-size: 55%;
  opacity: .6;
  font-weight: normal;
}

// Mixin: Raquo
//
// Because technically raquo is not semantic, it's better to add it like this.
//
// ex. @include raquo()

@mixin raquo() {
  &:after {
    content: " \00BB";
  }
}

// Mixin: Font Face
//
// Super simple font-face declaration. Just give the name and the folder it
// lives in. Make sure the font name matches the name of the files. Uses the
// fontspring syntax:
// http://www.fontspring.com/blog/the-new-bulletproof-font-face-syntax
//
// ex. font-face(proxima-nova, '/fonts')

@mixin font-face($name, $folder, $weight:'normal', $style:'normal') {
  @font-face {
    font-family: $name;
    src: url($folder unquote('/') $name unquote('.eot') '?#iefix') format('embedded-opentype'), url($folder unquote('/') $name unquote('.woff')) format('woff'), url($folder unquote('/') $name unquote('.ttf')) format('truetype'), url($folder unquote('/') $name unquote('.eot') unquote('#') $name) format('svg');
    font-weight: unquote($weight);
    font-style: unquote($style);
  }
}


// Mixin: Reset Link
//
// Sometimes my link mixin of the browser defaults will give you questionable
// link defaults that you don't want on certain elements. This guy gets rid of
// that.

// ex. @include reset-link()

@mixin reset-link() {
  border: none;
  text-decoration: none;
  color: initial;

  &:hover {
    border: none;
    text-decoration: none;
    color: initial;
  }

  &:visited {
    opacity: 1;
  }
}


// Mixin: Ul
//
// A nice default for list styles. More or less the same as browser defaults,
// scales nicely. You can pass it any style that list-style-type would normally
// take. Defaults to disc. Use this on a ul element por favor.
//
// ex. @include ul()

@mixin ul($style: 'disc') {
  margin: 5px 15px;
  margin: 0.32rem 0.94rem;
  padding-left: 1rem;

  li {
    list-style-type: unquote($style);
    padding: 2px 0;
    padding: 0.125rem;
  }
}

// Mixin: Ol
//
// A nice default for list styles. More or less the same as browser defaults,
// scales nicely. You can pass it any style that list-style-type would normally
// take. Defaults to decimal. Use this on a ol element por favor.
//
// ex. @include ol()

@mixin ol($style: 'decimal') {
  margin: 5px 18px;
  margin: 0.32rem 1.125rem;
  padding-left: 1rem;

  li {
    list-style-type: unquote($style);
    padding: 2px 0;
    padding: 0.125rem;
  }
}

// Mixin: Inline List
//
// For when you need your list to be horizontal. Pass it the spacing you want
// between list elements, whatever units you'd like. Defaults to 20px.
//
// ex. @include inline-list()

@mixin inline-list($spacing: 20px) {
  @include group();
  margin: 0;
  padding: 0;

  li {
    float: left;
    margin-right: $spacing;
    list-style-type: none;
  }

  li:last-child {
    margin-right: 0;
  }
}

// Mixin: Reset List
//
// If you're tired of all the list shenanigans and want to get rid of them for
// this special list you're working on, this is your guy. Resets the margins,
// padding, and style.
//
// ex. @include reset-list()

@mixin reset-list() {
  margin: 0;
  padding: 0;

  li {
    float: none;
    list-style-type: none;
    padding: 0;
    margin: 0;
  }
}

// Additive Mixin: Lists
//
// WARNING: Creates classes in your css and styles them - not to be used inside
// an element.
//
// Adds roots' styles to ul and ols.
//
// ex. lists()

@include lists() {
  ul {
    @include ul();
  }
  ol {
    @include ol();
  }
}
